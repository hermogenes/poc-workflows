name: Node.js CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  continuous-integration-monorepo:
    runs-on: ubuntu-latest
    outputs:
      affectedProjects: ${{ steps.affected-check.outputs.affectedProjects }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: nrwl/nx-set-shas@v3
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - uses: actions/cache@v3
      id: modules-cache
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install Dependencies
      if: steps.modules-cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Linting
      run: npx nx affected --target=lint
    - name: Test
      run: npx nx affected --target=test
    - name: Export affected projects with build definition
      id: affected-check
      run: |
        echo "affectedProjects=$(npx nx print-affected --type=app --target=all --select=projectGraph.nodes | jq -c -R 'split(", ")')" >> $GITHUB_OUTPUT
    - name: Trigger affected projects Pack
      uses: actions/github-script@v6
      env:
        AFFECTED_PROJECTS: ${{ steps.affected-check.outputs.affectedProjects }}
      with:
        script: |
          const { AFFECTED_PROJECTS } = process.env;
          const affectedProjectsArray = JSON.parse(AFFECTED_PROJECTS);
          for (const project of affectedProjectsArray) {
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.name,
              workflow_id: `${project}-ci.yml`,
              ref: context.ref
            });
          }
