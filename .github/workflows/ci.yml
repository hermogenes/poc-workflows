name: Node.js CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  continuous-integration-monorepo:
    runs-on: ubuntu-latest
    outputs:
      affectedProjects: ${{ steps.affected-check.outputs.affectedProjects }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - uses: actions/cache@v3
      id: modules-cache
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install Dependencies
      if: steps.modules-cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Linting
      run: npx nx affected --target=lint
    - name: Test
      run: npx nx affected --target=test
    - name: Export affected projects with build definition
      id: affected-check
      run: |
        echo "affectedProjects=$(npx nx print-affected --type=app --target=all --select=projectGraph.nodes | jq -c -R 'split(", ")')" >> $GITHUB_OUTPUT
  
  trigger-build:
    needs: continuous-integration-monorepo
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJSON(needs.continuous-integration-monorepo.outputs.affectedProjects) }}
    name: Trigger Build project ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v3
      - name: Check if ${{ matrix.project }}-ci.yml file exists
        id: check-ci-file-exists
        run: |
          if [ -f ./github/workflows/${{ matrix.project }}-ci.yml ]; then echo "exists=true"; else echo "exists=false"; fi >> $GITHUB_OUTPUT
      - name: Trigger ${{ matrix.project }} build using workflow_dispatch
        uses: octokit/request-action@v2.x
        if: steps.check-ci-file-exists.outputs.exists == 'true'
        id: get_latest_release
        with:
          route: POST /repos/{repository}/actions/workflows/{workflow_id}/dispatches
          body: '{"ref": "${{ github.ref }}" }'
          repository: ${{ github.repository }}
          workflow_id: ${{ matrix.project }}-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Trigger ${{ matrix.project }} build skipped
        if: steps.check-ci-file-exists.outputs.exists == 'false'
        run: echo "File ./github/workflows/${{ matrix.project }}-ci.yml does't exist. Skipping build trigger"
    